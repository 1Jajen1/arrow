<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<SmellBaseline>
    <Blacklist timestamp="1490879306930"/>
    <Whitelist timestamp="1492411880669">
        <ID>EmptyClassBlock:Typeclass.kt$&lt;no name provided&gt; : TypeLiteral</ID>
        <ID>ComplexMethod:AndThen.kt$AndThen$ @Suppress("UNCHECKED_CAST") internal fun runLoop(_success: A?, _failure: Throwable?, _isSuccess: Boolean): B</ID>
        <ID>OptionalUnit:IO.kt$IO$Unit</ID>
        <ID>OptionalUnit:AndThen.kt$AndThen$Unit</ID>
        <ID>OptionalUnit:FreeApplicative.kt$FreeApplicative$Unit</ID>
        <ID>OptionalUnit:NonEmptyListMonad.kt$NonEmptyListMonad$Unit</ID>
        <ID>NestedBlockDepth:AndThen.kt$AndThen$ @Suppress("UNCHECKED_CAST") internal fun runLoop(_success: A?, _failure: Throwable?, _isSuccess: Boolean): B</ID>
        <ID>NestedBlockDepth:Eval.kt$Eval.Compute$override fun value(): A</ID>
        <ID><![CDATA[NestedBlockDepth:FreeApplicative.kt$FreeApplicative$// Beware: smart code @Suppress("UNCHECKED_CAST") fun <G> foldMap(f: FunctionK<F, G>, GA: Applicative<G>): HK<G, A>]]></ID>
    </Whitelist>
</SmellBaseline>
