$dokka.format:jekyll
$dokka.linkExtension:html
$dokka.location:arrow.effects$awaitAll(arrow.Kind((arrow.effects.awaitAll.F, arrow.Kind((arrow.effects.ForDeferredK, arrow.effects.awaitAll.A)))), arrow.typeclasses.Traverse((arrow.effects.awaitAll.F)))arrow.effects/arrow.-kind/await-all.html
$dokka.location:arrow.effects.deferredk.applicative$ap(arrow.Kind((arrow.effects.ForDeferredK, arrow.effects.deferredk.applicative.ap.A)), arrow.Kind((arrow.effects.ForDeferredK, kotlin.Function1((arrow.effects.deferredk.applicative.ap.A, arrow.effects.deferredk.applicative.ap.B)))))arrow.effects.deferredk.applicative/arrow.-kind/ap.html
$dokka.location:arrow.effects.deferredk.applicative$map(arrow.Kind((arrow.effects.ForDeferredK, arrow.effects.deferredk.applicative.map.A)), kotlin.Function1((arrow.effects.deferredk.applicative.map.A, arrow.effects.deferredk.applicative.map.B)))arrow.effects.deferredk.applicative/arrow.-kind/map.html
$dokka.location:arrow.effects.deferredk.applicative$map2(arrow.Kind((arrow.effects.ForDeferredK, arrow.effects.deferredk.applicative.map2.A)), arrow.Kind((arrow.effects.ForDeferredK, arrow.effects.deferredk.applicative.map2.B)), kotlin.Function1((arrow.core.Tuple2((arrow.effects.deferredk.applicative.map2.A, arrow.effects.deferredk.applicative.map2.B)), arrow.effects.deferredk.applicative.map2.Z)))arrow.effects.deferredk.applicative/arrow.-kind/map2.html
$dokka.location:arrow.effects.deferredk.applicative$map2Eval(arrow.Kind((arrow.effects.ForDeferredK, arrow.effects.deferredk.applicative.map2Eval.A)), arrow.core.Eval((arrow.Kind((arrow.effects.ForDeferredK, arrow.effects.deferredk.applicative.map2Eval.B)))), kotlin.Function1((arrow.core.Tuple2((arrow.effects.deferredk.applicative.map2Eval.A, arrow.effects.deferredk.applicative.map2Eval.B)), arrow.effects.deferredk.applicative.map2Eval.Z)))arrow.effects.deferredk.applicative/arrow.-kind/map2-eval.html
$dokka.location:arrow.effects.deferredk.applicative$plus(arrow.Kind((arrow.effects.ForDeferredK, java.math.BigDecimal)), arrow.Kind((arrow.effects.ForDeferredK, java.math.BigDecimal)))arrow.effects.deferredk.applicative/arrow.-kind/plus.html
$dokka.location:arrow.effects.deferredk.applicative$product(arrow.Kind((arrow.effects.ForDeferredK, arrow.core.Tuple2((arrow.effects.deferredk.applicative.product.A, arrow.effects.deferredk.applicative.product.B)))), arrow.Kind((arrow.effects.ForDeferredK, arrow.effects.deferredk.applicative.product.Z)))arrow.effects.deferredk.applicative/arrow.-kind/product.html
$dokka.location:arrow.effects.deferredk.applicative$product(arrow.Kind((arrow.effects.ForDeferredK, arrow.core.Tuple3((arrow.effects.deferredk.applicative.product.A, arrow.effects.deferredk.applicative.product.B, arrow.effects.deferredk.applicative.product.C)))), arrow.Kind((arrow.effects.ForDeferredK, arrow.effects.deferredk.applicative.product.Z)))arrow.effects.deferredk.applicative/arrow.-kind/product.html
$dokka.location:arrow.effects.deferredk.applicative$product(arrow.Kind((arrow.effects.ForDeferredK, arrow.core.Tuple4((arrow.effects.deferredk.applicative.product.A, arrow.effects.deferredk.applicative.product.B, arrow.effects.deferredk.applicative.product.C, arrow.effects.deferredk.applicative.product.D)))), arrow.Kind((arrow.effects.ForDeferredK, arrow.effects.deferredk.applicative.product.Z)))arrow.effects.deferredk.applicative/arrow.-kind/product.html
$dokka.location:arrow.effects.deferredk.applicative$product(arrow.Kind((arrow.effects.ForDeferredK, arrow.core.Tuple5((arrow.effects.deferredk.applicative.product.A, arrow.effects.deferredk.applicative.product.B, arrow.effects.deferredk.applicative.product.C, arrow.effects.deferredk.applicative.product.D, arrow.effects.deferredk.applicative.product.E)))), arrow.Kind((arrow.effects.ForDeferredK, arrow.effects.deferredk.applicative.product.Z)))arrow.effects.deferredk.applicative/arrow.-kind/product.html
$dokka.location:arrow.effects.deferredk.applicative$product(arrow.Kind((arrow.effects.ForDeferredK, arrow.core.Tuple6((arrow.effects.deferredk.applicative.product.A, arrow.effects.deferredk.applicative.product.B, arrow.effects.deferredk.applicative.product.C, arrow.effects.deferredk.applicative.product.D, arrow.effects.deferredk.applicative.product.E, arrow.effects.deferredk.applicative.product.FF)))), arrow.Kind((arrow.effects.ForDeferredK, arrow.effects.deferredk.applicative.product.Z)))arrow.effects.deferredk.applicative/arrow.-kind/product.html
$dokka.location:arrow.effects.deferredk.applicative$product(arrow.Kind((arrow.effects.ForDeferredK, arrow.core.Tuple7((arrow.effects.deferredk.applicative.product.A, arrow.effects.deferredk.applicative.product.B, arrow.effects.deferredk.applicative.product.C, arrow.effects.deferredk.applicative.product.D, arrow.effects.deferredk.applicative.product.E, arrow.effects.deferredk.applicative.product.FF, arrow.effects.deferredk.applicative.product.G)))), arrow.Kind((arrow.effects.ForDeferredK, arrow.effects.deferredk.applicative.product.Z)))arrow.effects.deferredk.applicative/arrow.-kind/product.html
$dokka.location:arrow.effects.deferredk.applicative$product(arrow.Kind((arrow.effects.ForDeferredK, arrow.core.Tuple8((arrow.effects.deferredk.applicative.product.A, arrow.effects.deferredk.applicative.product.B, arrow.effects.deferredk.applicative.product.C, arrow.effects.deferredk.applicative.product.D, arrow.effects.deferredk.applicative.product.E, arrow.effects.deferredk.applicative.product.FF, arrow.effects.deferredk.applicative.product.G, arrow.effects.deferredk.applicative.product.H)))), arrow.Kind((arrow.effects.ForDeferredK, arrow.effects.deferredk.applicative.product.Z)))arrow.effects.deferredk.applicative/arrow.-kind/product.html
$dokka.location:arrow.effects.deferredk.applicative$product(arrow.Kind((arrow.effects.ForDeferredK, arrow.core.Tuple9((arrow.effects.deferredk.applicative.product.A, arrow.effects.deferredk.applicative.product.B, arrow.effects.deferredk.applicative.product.C, arrow.effects.deferredk.applicative.product.D, arrow.effects.deferredk.applicative.product.E, arrow.effects.deferredk.applicative.product.FF, arrow.effects.deferredk.applicative.product.G, arrow.effects.deferredk.applicative.product.H, arrow.effects.deferredk.applicative.product.I)))), arrow.Kind((arrow.effects.ForDeferredK, arrow.effects.deferredk.applicative.product.Z)))arrow.effects.deferredk.applicative/arrow.-kind/product.html
$dokka.location:arrow.effects.deferredk.applicative$product(arrow.Kind((arrow.effects.ForDeferredK, arrow.effects.deferredk.applicative.product.A)), arrow.Kind((arrow.effects.ForDeferredK, arrow.effects.deferredk.applicative.product.B)))arrow.effects.deferredk.applicative/arrow.-kind/product.html
$dokka.location:arrow.effects.deferredk.applicativeError$attempt(arrow.Kind((arrow.effects.ForDeferredK, arrow.effects.deferredk.applicativeError.attempt.A)))arrow.effects.deferredk.applicative-error/arrow.-kind/attempt.html
$dokka.location:arrow.effects.deferredk.applicativeError$catch(arrow.typeclasses.ApplicativeError((arrow.effects.ForDeferredK, kotlin.Throwable)), kotlin.Function0((arrow.effects.deferredk.applicativeError.catch.A)))arrow.effects.deferredk.applicative-error/arrow.typeclasses.-applicative-error/catch.html
$dokka.location:arrow.effects.deferredk.applicativeError$fromEither(arrow.core.Either((arrow.effects.deferredk.applicativeError.fromEither.EE, arrow.effects.deferredk.applicativeError.fromEither.A)), kotlin.Function1((arrow.effects.deferredk.applicativeError.fromEither.EE, kotlin.Throwable)))arrow.effects.deferredk.applicative-error/arrow.core.-either/from-either.html
$dokka.location:arrow.effects.deferredk.applicativeError$fromOption(arrow.Kind((arrow.core.ForOption, arrow.effects.deferredk.applicativeError.fromOption.A)), kotlin.Function0((kotlin.Throwable)))arrow.effects.deferredk.applicative-error/arrow.-kind/from-option.html
$dokka.location:arrow.effects.deferredk.applicativeError$fromTry(arrow.Kind((arrow.core.ForTry, arrow.effects.deferredk.applicativeError.fromTry.A)), kotlin.Function1((kotlin.Throwable, )))arrow.effects.deferredk.applicative-error/arrow.-kind/from-try.html
$dokka.location:arrow.effects.deferredk.applicativeError$handleError(arrow.Kind((arrow.effects.ForDeferredK, arrow.effects.deferredk.applicativeError.handleError.A)), kotlin.Function1((kotlin.Throwable, arrow.effects.deferredk.applicativeError.handleError.A)))arrow.effects.deferredk.applicative-error/arrow.-kind/handle-error.html
$dokka.location:arrow.effects.deferredk.applicativeError$handleErrorWith(arrow.Kind((arrow.effects.ForDeferredK, arrow.effects.deferredk.applicativeError.handleErrorWith.A)), kotlin.Function1((kotlin.Throwable, arrow.Kind((arrow.effects.ForDeferredK, arrow.effects.deferredk.applicativeError.handleErrorWith.A)))))arrow.effects.deferredk.applicative-error/arrow.-kind/handle-error-with.html
$dokka.location:arrow.effects.deferredk.applicativeError$raiseError(kotlin.Throwable)arrow.effects.deferredk.applicative-error/kotlin.-throwable/raise-error.html
$dokka.location:arrow.effects.deferredk.async$continueOn(arrow.Kind((arrow.effects.ForDeferredK, arrow.effects.deferredk.async.continueOn.A)), kotlin.coroutines.CoroutineContext)arrow.effects.deferredk.async/arrow.-kind/continue-on.html
$dokka.location:arrow.effects.deferredk.bracket$bracket(arrow.Kind((arrow.effects.ForDeferredK, arrow.effects.deferredk.bracket.bracket.A)), kotlin.Function1((arrow.effects.deferredk.bracket.bracket.A, arrow.Kind((arrow.effects.ForDeferredK, kotlin.Unit)))), kotlin.Function1((arrow.effects.deferredk.bracket.bracket.A, arrow.Kind((arrow.effects.ForDeferredK, arrow.effects.deferredk.bracket.bracket.B)))))arrow.effects.deferredk.bracket/arrow.-kind/bracket.html
$dokka.location:arrow.effects.deferredk.bracket$bracketCase(arrow.Kind((arrow.effects.ForDeferredK, arrow.effects.deferredk.bracket.bracketCase.A)), kotlin.Function2((arrow.effects.deferredk.bracket.bracketCase.A, arrow.effects.typeclasses.ExitCase((kotlin.Throwable)), arrow.Kind((arrow.effects.ForDeferredK, kotlin.Unit)))), kotlin.Function1((arrow.effects.deferredk.bracket.bracketCase.A, arrow.Kind((arrow.effects.ForDeferredK, arrow.effects.deferredk.bracket.bracketCase.B)))))arrow.effects.deferredk.bracket/arrow.-kind/bracket-case.html
$dokka.location:arrow.effects.deferredk.bracket$guarantee(arrow.Kind((arrow.effects.ForDeferredK, arrow.effects.deferredk.bracket.guarantee.A)), arrow.Kind((arrow.effects.ForDeferredK, kotlin.Unit)))arrow.effects.deferredk.bracket/arrow.-kind/guarantee.html
$dokka.location:arrow.effects.deferredk.bracket$guaranteeCase(arrow.Kind((arrow.effects.ForDeferredK, arrow.effects.deferredk.bracket.guaranteeCase.A)), kotlin.Function1((arrow.effects.typeclasses.ExitCase((kotlin.Throwable)), arrow.Kind((arrow.effects.ForDeferredK, kotlin.Unit)))))arrow.effects.deferredk.bracket/arrow.-kind/guarantee-case.html
$dokka.location:arrow.effects.deferredk.bracket$uncancelable(arrow.Kind((arrow.effects.ForDeferredK, arrow.effects.deferredk.bracket.uncancelable.A)))arrow.effects.deferredk.bracket/arrow.-kind/uncancelable.html
$dokka.location:arrow.effects.deferredk.concurrentEffect$runAsyncCancellable(arrow.Kind((arrow.effects.ForDeferredK, arrow.effects.deferredk.concurrentEffect.runAsyncCancellable.A)), kotlin.Function1((arrow.core.Either((kotlin.Throwable, arrow.effects.deferredk.concurrentEffect.runAsyncCancellable.A)), arrow.Kind((arrow.effects.ForDeferredK, kotlin.Unit)))))arrow.effects.deferredk.concurrent-effect/arrow.-kind/run-async-cancellable.html
$dokka.location:arrow.effects.deferredk.effect$runAsync(arrow.Kind((arrow.effects.ForDeferredK, arrow.effects.deferredk.effect.runAsync.A)), kotlin.Function1((arrow.core.Either((kotlin.Throwable, arrow.effects.deferredk.effect.runAsync.A)), arrow.Kind((arrow.effects.ForDeferredK, kotlin.Unit)))))arrow.effects.deferredk.effect/arrow.-kind/run-async.html
$dokka.location:arrow.effects.deferredk.functor$as(arrow.Kind((arrow.effects.ForDeferredK, arrow.effects.deferredk.functor.as.A)), arrow.effects.deferredk.functor.as.B)arrow.effects.deferredk.functor/arrow.-kind/as.html
$dokka.location:arrow.effects.deferredk.functor$fproduct(arrow.Kind((arrow.effects.ForDeferredK, arrow.effects.deferredk.functor.fproduct.A)), kotlin.Function1((arrow.effects.deferredk.functor.fproduct.A, arrow.effects.deferredk.functor.fproduct.B)))arrow.effects.deferredk.functor/arrow.-kind/fproduct.html
$dokka.location:arrow.effects.deferredk.functor$imap(arrow.Kind((arrow.effects.ForDeferredK, arrow.effects.deferredk.functor.imap.A)), kotlin.Function1((arrow.effects.deferredk.functor.imap.A, arrow.effects.deferredk.functor.imap.B)), kotlin.Function1((arrow.effects.deferredk.functor.imap.B, arrow.effects.deferredk.functor.imap.A)))arrow.effects.deferredk.functor/arrow.-kind/imap.html
$dokka.location:arrow.effects.deferredk.functor$map(arrow.Kind((arrow.effects.ForDeferredK, arrow.effects.deferredk.functor.map.A)), kotlin.Function1((arrow.effects.deferredk.functor.map.A, arrow.effects.deferredk.functor.map.B)))arrow.effects.deferredk.functor/arrow.-kind/map.html
$dokka.location:arrow.effects.deferredk.functor$tupleLeft(arrow.Kind((arrow.effects.ForDeferredK, arrow.effects.deferredk.functor.tupleLeft.A)), arrow.effects.deferredk.functor.tupleLeft.B)arrow.effects.deferredk.functor/arrow.-kind/tuple-left.html
$dokka.location:arrow.effects.deferredk.functor$tupleRight(arrow.Kind((arrow.effects.ForDeferredK, arrow.effects.deferredk.functor.tupleRight.A)), arrow.effects.deferredk.functor.tupleRight.B)arrow.effects.deferredk.functor/arrow.-kind/tuple-right.html
$dokka.location:arrow.effects.deferredk.functor$void(arrow.Kind((arrow.effects.ForDeferredK, arrow.effects.deferredk.functor.void.A)))arrow.effects.deferredk.functor/arrow.-kind/void.html
$dokka.location:arrow.effects.deferredk.functor$widen(arrow.Kind((arrow.effects.ForDeferredK, arrow.effects.deferredk.functor.widen.A)))arrow.effects.deferredk.functor/arrow.-kind/widen.html
$dokka.location:arrow.effects.deferredk.monad$ap(arrow.Kind((arrow.effects.ForDeferredK, arrow.effects.deferredk.monad.ap.A)), arrow.Kind((arrow.effects.ForDeferredK, kotlin.Function1((arrow.effects.deferredk.monad.ap.A, arrow.effects.deferredk.monad.ap.B)))))arrow.effects.deferredk.monad/arrow.-kind/ap.html
$dokka.location:arrow.effects.deferredk.monad$effectM(arrow.Kind((arrow.effects.ForDeferredK, arrow.effects.deferredk.monad.effectM.A)), kotlin.Function1((arrow.effects.deferredk.monad.effectM.A, arrow.Kind((arrow.effects.ForDeferredK, arrow.effects.deferredk.monad.effectM.B)))))arrow.effects.deferredk.monad/arrow.-kind/effect-m.html
$dokka.location:arrow.effects.deferredk.monad$flatMap(arrow.Kind((arrow.effects.ForDeferredK, arrow.effects.deferredk.monad.flatMap.A)), kotlin.Function1((arrow.effects.deferredk.monad.flatMap.A, arrow.Kind((arrow.effects.ForDeferredK, arrow.effects.deferredk.monad.flatMap.B)))))arrow.effects.deferredk.monad/arrow.-kind/flat-map.html
$dokka.location:arrow.effects.deferredk.monad$flatten(arrow.Kind((arrow.effects.ForDeferredK, arrow.Kind((, arrow.effects.deferredk.monad.flatten.A)))))arrow.effects.deferredk.monad/arrow.-kind/flatten.html
$dokka.location:arrow.effects.deferredk.monad$followedBy(arrow.Kind((arrow.effects.ForDeferredK, arrow.effects.deferredk.monad.followedBy.A)), arrow.Kind((arrow.effects.ForDeferredK, arrow.effects.deferredk.monad.followedBy.B)))arrow.effects.deferredk.monad/arrow.-kind/followed-by.html
$dokka.location:arrow.effects.deferredk.monad$followedByEval(arrow.Kind((arrow.effects.ForDeferredK, arrow.effects.deferredk.monad.followedByEval.A)), arrow.core.Eval((arrow.Kind((arrow.effects.ForDeferredK, arrow.effects.deferredk.monad.followedByEval.B)))))arrow.effects.deferredk.monad/arrow.-kind/followed-by-eval.html
$dokka.location:arrow.effects.deferredk.monad$forEffect(arrow.Kind((arrow.effects.ForDeferredK, arrow.effects.deferredk.monad.forEffect.A)), arrow.Kind((arrow.effects.ForDeferredK, arrow.effects.deferredk.monad.forEffect.B)))arrow.effects.deferredk.monad/arrow.-kind/for-effect.html
$dokka.location:arrow.effects.deferredk.monad$forEffectEval(arrow.Kind((arrow.effects.ForDeferredK, arrow.effects.deferredk.monad.forEffectEval.A)), arrow.core.Eval((arrow.Kind((arrow.effects.ForDeferredK, arrow.effects.deferredk.monad.forEffectEval.B)))))arrow.effects.deferredk.monad/arrow.-kind/for-effect-eval.html
$dokka.location:arrow.effects.deferredk.monad$ifM(arrow.Kind((arrow.effects.ForDeferredK, kotlin.Boolean)), kotlin.Function0((arrow.Kind((arrow.effects.ForDeferredK, arrow.effects.deferredk.monad.ifM.B)))), kotlin.Function0((arrow.Kind((arrow.effects.ForDeferredK, arrow.effects.deferredk.monad.ifM.B)))))arrow.effects.deferredk.monad/arrow.-kind/if-m.html
$dokka.location:arrow.effects.deferredk.monad$map(arrow.Kind((arrow.effects.ForDeferredK, arrow.effects.deferredk.monad.map.A)), kotlin.Function1((arrow.effects.deferredk.monad.map.A, arrow.effects.deferredk.monad.map.B)))arrow.effects.deferredk.monad/arrow.-kind/map.html
$dokka.location:arrow.effects.deferredk.monad$mproduct(arrow.Kind((arrow.effects.ForDeferredK, arrow.effects.deferredk.monad.mproduct.A)), kotlin.Function1((arrow.effects.deferredk.monad.mproduct.A, arrow.Kind((arrow.effects.ForDeferredK, arrow.effects.deferredk.monad.mproduct.B)))))arrow.effects.deferredk.monad/arrow.-kind/mproduct.html
$dokka.location:arrow.effects.deferredk.monadError$ensure(arrow.Kind((arrow.effects.ForDeferredK, arrow.effects.deferredk.monadError.ensure.A)), kotlin.Function0((kotlin.Throwable)), kotlin.Function1((arrow.effects.deferredk.monadError.ensure.A, kotlin.Boolean)))arrow.effects.deferredk.monad-error/arrow.-kind/ensure.html
arrow.effects
arrow.effects.deferredk.applicative
arrow.effects.deferredk.applicativeError
arrow.effects.deferredk.async
arrow.effects.deferredk.bracket
arrow.effects.deferredk.concurrentEffect
arrow.effects.deferredk.effect
arrow.effects.deferredk.functor
arrow.effects.deferredk.monad
arrow.effects.deferredk.monadDefer
arrow.effects.deferredk.monadError
