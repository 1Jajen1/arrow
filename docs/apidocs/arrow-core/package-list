$dokka.format:jekyll
$dokka.linkExtension:html
$dokka.location:arrow.core$andThen(kotlin.Function1((arrow.core.andThen.A, arrow.core.andThen.B)), kotlin.Function1((arrow.core.andThen.B, arrow.core.andThen.C)))arrow.core/kotlin.-function1/and-then.html
$dokka.location:arrow.core$ap(arrow.Kind((arrow.Kind((arrow.core.ForEither, arrow.core.ap.A)), arrow.core.ap.B)), arrow.Kind((arrow.Kind((arrow.core.ForEither, arrow.core.ap.A)), kotlin.Function1((arrow.core.ap.B, arrow.core.ap.C)))))arrow.core/arrow.-kind/ap.html
$dokka.location:arrow.core$combineK(arrow.Kind((arrow.Kind((arrow.core.ForEither, arrow.core.combineK.A)), arrow.core.combineK.B)), arrow.Kind((arrow.Kind((arrow.core.ForEither, arrow.core.combineK.A)), arrow.core.combineK.B)))arrow.core/arrow.-kind/combine-k.html
$dokka.location:arrow.core$compose(kotlin.Function1((arrow.core.compose.B, arrow.core.compose.C)), kotlin.Function1((arrow.core.compose.A, arrow.core.compose.B)))arrow.core/kotlin.-function1/compose.html
$dokka.location:arrow.core$contains(arrow.Kind((arrow.Kind((arrow.core.ForEither, arrow.core.contains.A)), arrow.core.contains.B)), arrow.core.contains.B)arrow.core/arrow.-kind/contains.html
$dokka.location:arrow.core$curry(kotlin.Function2((arrow.core.curry.A, arrow.core.curry.B, arrow.core.curry.Z)))arrow.core/kotlin.-function2/curry.html
$dokka.location:arrow.core$elementAtOrNone(kotlin.collections.Iterable((arrow.core.elementAtOrNone.T)), kotlin.Int)arrow.core/kotlin.collections.-iterable/element-at-or-none.html
$dokka.location:arrow.core$failure(kotlin.Throwable)arrow.core/kotlin.-throwable/failure.html
$dokka.location:arrow.core$filterOrElse(arrow.Kind((arrow.Kind((arrow.core.ForEither, arrow.core.filterOrElse.A)), arrow.core.filterOrElse.B)), kotlin.Function1((arrow.core.filterOrElse.B, kotlin.Boolean)), kotlin.Function0((arrow.core.filterOrElse.A)))arrow.core/arrow.-kind/filter-or-else.html
$dokka.location:arrow.core$firstOrNone(kotlin.collections.Iterable((arrow.core.firstOrNone.T)))arrow.core/kotlin.collections.-iterable/first-or-none.html
$dokka.location:arrow.core$firstOrNone(kotlin.collections.Iterable((arrow.core.firstOrNone.T)), kotlin.Function1((arrow.core.firstOrNone.T, kotlin.Boolean)))arrow.core/kotlin.collections.-iterable/first-or-none.html
$dokka.location:arrow.core$fix(arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.core.ForTuple22, arrow.core.fix.A)), arrow.core.fix.B)), arrow.core.fix.C)), arrow.core.fix.D)), arrow.core.fix.E)), arrow.core.fix.F)), arrow.core.fix.G)), arrow.core.fix.H)), arrow.core.fix.I)), arrow.core.fix.J)), arrow.core.fix.K)), arrow.core.fix.L)), arrow.core.fix.M)), arrow.core.fix.N)), arrow.core.fix.O)), arrow.core.fix.P)), arrow.core.fix.Q)), arrow.core.fix.R)), arrow.core.fix.S)), arrow.core.fix.T)), arrow.core.fix.U)), arrow.core.fix.V)))arrow.core/arrow.-kind/fix.html
$dokka.location:arrow.core$fix(arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.core.ForTuple21, arrow.core.fix.A)), arrow.core.fix.B)), arrow.core.fix.C)), arrow.core.fix.D)), arrow.core.fix.E)), arrow.core.fix.F)), arrow.core.fix.G)), arrow.core.fix.H)), arrow.core.fix.I)), arrow.core.fix.J)), arrow.core.fix.K)), arrow.core.fix.L)), arrow.core.fix.M)), arrow.core.fix.N)), arrow.core.fix.O)), arrow.core.fix.P)), arrow.core.fix.Q)), arrow.core.fix.R)), arrow.core.fix.S)), arrow.core.fix.T)), arrow.core.fix.U)))arrow.core/arrow.-kind/fix.html
$dokka.location:arrow.core$fix(arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.core.ForTuple20, arrow.core.fix.A)), arrow.core.fix.B)), arrow.core.fix.C)), arrow.core.fix.D)), arrow.core.fix.E)), arrow.core.fix.F)), arrow.core.fix.G)), arrow.core.fix.H)), arrow.core.fix.I)), arrow.core.fix.J)), arrow.core.fix.K)), arrow.core.fix.L)), arrow.core.fix.M)), arrow.core.fix.N)), arrow.core.fix.O)), arrow.core.fix.P)), arrow.core.fix.Q)), arrow.core.fix.R)), arrow.core.fix.S)), arrow.core.fix.T)))arrow.core/arrow.-kind/fix.html
$dokka.location:arrow.core$fix(arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.core.ForTuple19, arrow.core.fix.A)), arrow.core.fix.B)), arrow.core.fix.C)), arrow.core.fix.D)), arrow.core.fix.E)), arrow.core.fix.F)), arrow.core.fix.G)), arrow.core.fix.H)), arrow.core.fix.I)), arrow.core.fix.J)), arrow.core.fix.K)), arrow.core.fix.L)), arrow.core.fix.M)), arrow.core.fix.N)), arrow.core.fix.O)), arrow.core.fix.P)), arrow.core.fix.Q)), arrow.core.fix.R)), arrow.core.fix.S)))arrow.core/arrow.-kind/fix.html
$dokka.location:arrow.core$fix(arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.core.ForTuple18, arrow.core.fix.A)), arrow.core.fix.B)), arrow.core.fix.C)), arrow.core.fix.D)), arrow.core.fix.E)), arrow.core.fix.F)), arrow.core.fix.G)), arrow.core.fix.H)), arrow.core.fix.I)), arrow.core.fix.J)), arrow.core.fix.K)), arrow.core.fix.L)), arrow.core.fix.M)), arrow.core.fix.N)), arrow.core.fix.O)), arrow.core.fix.P)), arrow.core.fix.Q)), arrow.core.fix.R)))arrow.core/arrow.-kind/fix.html
$dokka.location:arrow.core$fix(arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.core.ForTuple17, arrow.core.fix.A)), arrow.core.fix.B)), arrow.core.fix.C)), arrow.core.fix.D)), arrow.core.fix.E)), arrow.core.fix.F)), arrow.core.fix.G)), arrow.core.fix.H)), arrow.core.fix.I)), arrow.core.fix.J)), arrow.core.fix.K)), arrow.core.fix.L)), arrow.core.fix.M)), arrow.core.fix.N)), arrow.core.fix.O)), arrow.core.fix.P)), arrow.core.fix.Q)))arrow.core/arrow.-kind/fix.html
$dokka.location:arrow.core$fix(arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.core.ForTuple16, arrow.core.fix.A)), arrow.core.fix.B)), arrow.core.fix.C)), arrow.core.fix.D)), arrow.core.fix.E)), arrow.core.fix.F)), arrow.core.fix.G)), arrow.core.fix.H)), arrow.core.fix.I)), arrow.core.fix.J)), arrow.core.fix.K)), arrow.core.fix.L)), arrow.core.fix.M)), arrow.core.fix.N)), arrow.core.fix.O)), arrow.core.fix.P)))arrow.core/arrow.-kind/fix.html
$dokka.location:arrow.core$fix(arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.core.ForTuple15, arrow.core.fix.A)), arrow.core.fix.B)), arrow.core.fix.C)), arrow.core.fix.D)), arrow.core.fix.E)), arrow.core.fix.F)), arrow.core.fix.G)), arrow.core.fix.H)), arrow.core.fix.I)), arrow.core.fix.J)), arrow.core.fix.K)), arrow.core.fix.L)), arrow.core.fix.M)), arrow.core.fix.N)), arrow.core.fix.O)))arrow.core/arrow.-kind/fix.html
$dokka.location:arrow.core$fix(arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.core.ForTuple14, arrow.core.fix.A)), arrow.core.fix.B)), arrow.core.fix.C)), arrow.core.fix.D)), arrow.core.fix.E)), arrow.core.fix.F)), arrow.core.fix.G)), arrow.core.fix.H)), arrow.core.fix.I)), arrow.core.fix.J)), arrow.core.fix.K)), arrow.core.fix.L)), arrow.core.fix.M)), arrow.core.fix.N)))arrow.core/arrow.-kind/fix.html
$dokka.location:arrow.core$fix(arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.core.ForTuple13, arrow.core.fix.A)), arrow.core.fix.B)), arrow.core.fix.C)), arrow.core.fix.D)), arrow.core.fix.E)), arrow.core.fix.F)), arrow.core.fix.G)), arrow.core.fix.H)), arrow.core.fix.I)), arrow.core.fix.J)), arrow.core.fix.K)), arrow.core.fix.L)), arrow.core.fix.M)))arrow.core/arrow.-kind/fix.html
$dokka.location:arrow.core$fix(arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.core.ForTuple12, arrow.core.fix.A)), arrow.core.fix.B)), arrow.core.fix.C)), arrow.core.fix.D)), arrow.core.fix.E)), arrow.core.fix.F)), arrow.core.fix.G)), arrow.core.fix.H)), arrow.core.fix.I)), arrow.core.fix.J)), arrow.core.fix.K)), arrow.core.fix.L)))arrow.core/arrow.-kind/fix.html
$dokka.location:arrow.core$fix(arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.core.ForTuple11, arrow.core.fix.A)), arrow.core.fix.B)), arrow.core.fix.C)), arrow.core.fix.D)), arrow.core.fix.E)), arrow.core.fix.F)), arrow.core.fix.G)), arrow.core.fix.H)), arrow.core.fix.I)), arrow.core.fix.J)), arrow.core.fix.K)))arrow.core/arrow.-kind/fix.html
$dokka.location:arrow.core$fix(arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.core.ForTuple10, arrow.core.fix.A)), arrow.core.fix.B)), arrow.core.fix.C)), arrow.core.fix.D)), arrow.core.fix.E)), arrow.core.fix.F)), arrow.core.fix.G)), arrow.core.fix.H)), arrow.core.fix.I)), arrow.core.fix.J)))arrow.core/arrow.-kind/fix.html
$dokka.location:arrow.core$fix(arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.core.ForTuple9, arrow.core.fix.A)), arrow.core.fix.B)), arrow.core.fix.C)), arrow.core.fix.D)), arrow.core.fix.E)), arrow.core.fix.F)), arrow.core.fix.G)), arrow.core.fix.H)), arrow.core.fix.I)))arrow.core/arrow.-kind/fix.html
$dokka.location:arrow.core$fix(arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.core.ForTuple8, arrow.core.fix.A)), arrow.core.fix.B)), arrow.core.fix.C)), arrow.core.fix.D)), arrow.core.fix.E)), arrow.core.fix.F)), arrow.core.fix.G)), arrow.core.fix.H)))arrow.core/arrow.-kind/fix.html
$dokka.location:arrow.core$fix(arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.core.ForTuple7, arrow.core.fix.A)), arrow.core.fix.B)), arrow.core.fix.C)), arrow.core.fix.D)), arrow.core.fix.E)), arrow.core.fix.F)), arrow.core.fix.G)))arrow.core/arrow.-kind/fix.html
$dokka.location:arrow.core$fix(arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.core.ForTuple6, arrow.core.fix.A)), arrow.core.fix.B)), arrow.core.fix.C)), arrow.core.fix.D)), arrow.core.fix.E)), arrow.core.fix.F)))arrow.core/arrow.-kind/fix.html
$dokka.location:arrow.core$fix(arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.core.ForTuple5, arrow.core.fix.A)), arrow.core.fix.B)), arrow.core.fix.C)), arrow.core.fix.D)), arrow.core.fix.E)))arrow.core/arrow.-kind/fix.html
$dokka.location:arrow.core$fix(arrow.Kind((arrow.Kind((arrow.Kind((arrow.Kind((arrow.core.ForTuple4, arrow.core.fix.A)), arrow.core.fix.B)), arrow.core.fix.C)), arrow.core.fix.D)))arrow.core/arrow.-kind/fix.html
$dokka.location:arrow.core$fix(arrow.Kind((arrow.Kind((arrow.Kind((arrow.core.ForTuple3, arrow.core.fix.A)), arrow.core.fix.B)), arrow.core.fix.C)))arrow.core/arrow.-kind/fix.html
$dokka.location:arrow.core$fix(arrow.Kind((arrow.Kind((arrow.core.ForEither, arrow.core.fix.A)), arrow.core.fix.B)))arrow.core/arrow.-kind/fix.html
$dokka.location:arrow.core$fix(arrow.Kind((arrow.Kind((arrow.core.ForFunction1, arrow.core.fix.I)), arrow.core.fix.O)))arrow.core/arrow.-kind/fix.html
$dokka.location:arrow.core$fix(arrow.Kind((arrow.Kind((arrow.core.ForTuple2, arrow.core.fix.A)), arrow.core.fix.B)))arrow.core/arrow.-kind/fix.html
$dokka.location:arrow.core$fix(arrow.Kind((arrow.core.ForEval, arrow.core.fix.A)))arrow.core/arrow.-kind/fix.html
$dokka.location:arrow.core$fix(arrow.Kind((arrow.core.ForFunction0, arrow.core.fix.A)))arrow.core/arrow.-kind/fix.html
$dokka.location:arrow.core$fix(arrow.Kind((arrow.core.ForId, arrow.core.fix.A)))arrow.core/arrow.-kind/fix.html
$dokka.location:arrow.core$fix(arrow.Kind((arrow.core.ForOption, arrow.core.fix.A)))arrow.core/arrow.-kind/fix.html
$dokka.location:arrow.core$fix(arrow.Kind((arrow.core.ForTry, arrow.core.fix.A)))arrow.core/arrow.-kind/fix.html
$dokka.location:arrow.core$flatMap(arrow.Kind((arrow.Kind((arrow.core.ForEither, arrow.core.flatMap.A)), arrow.core.flatMap.B)), kotlin.Function1((arrow.core.flatMap.B, arrow.core.Either((arrow.core.flatMap.A, arrow.core.flatMap.C)))))arrow.core/arrow.-kind/flat-map.html
$dokka.location:arrow.core$flatten(arrow.Kind((arrow.core.ForTry, arrow.Kind((, arrow.core.flatten.T)))))arrow.core/arrow.-kind/flatten.html
$dokka.location:arrow.core$getOrDefault(arrow.Kind((arrow.core.ForTry, arrow.core.getOrDefault.B)), kotlin.Function0((arrow.core.getOrDefault.B)))arrow.core/arrow.-kind/get-or-default.html
$dokka.location:arrow.core$getOrElse(arrow.Kind((arrow.Kind((arrow.core.ForEither, kotlin.Any)), arrow.core.getOrElse.B)), kotlin.Function0((arrow.core.getOrElse.B)))arrow.core/arrow.-kind/get-or-else.html
$dokka.location:arrow.core$getOrElse(arrow.Kind((arrow.core.ForTry, arrow.core.getOrElse.B)), kotlin.Function1((kotlin.Throwable, arrow.core.getOrElse.B)))arrow.core/arrow.-kind/get-or-else.html
$dokka.location:arrow.core$getOrHandle(arrow.Kind((arrow.Kind((arrow.core.ForEither, arrow.core.getOrHandle.A)), arrow.core.getOrHandle.B)), kotlin.Function1((arrow.core.getOrHandle.A, arrow.core.getOrHandle.B)))arrow.core/arrow.-kind/get-or-handle.html
$dokka.location:arrow.core$invoke(arrow.Kind((arrow.Kind((arrow.core.ForFunction1, arrow.core.invoke.I)), arrow.core.invoke.O)), arrow.core.invoke.I)arrow.core/arrow.-kind/invoke.html
$dokka.location:arrow.core$invoke(arrow.Kind((arrow.core.ForFunction0, arrow.core.invoke.A)))arrow.core/arrow.-kind/invoke.html
$dokka.location:arrow.core$k(kotlin.Function0((arrow.core.k.A)))arrow.core/kotlin.-function0/k.html
$dokka.location:arrow.core$k(kotlin.Function1((arrow.core.k.I, arrow.core.k.O)))arrow.core/kotlin.-function1/k.html
$dokka.location:arrow.core$lastOrNone(kotlin.collections.Iterable((arrow.core.lastOrNone.T)))arrow.core/kotlin.collections.-iterable/last-or-none.html
$dokka.location:arrow.core$lastOrNone(kotlin.collections.Iterable((arrow.core.lastOrNone.T)), kotlin.Function1((arrow.core.lastOrNone.T, kotlin.Boolean)))arrow.core/kotlin.collections.-iterable/last-or-none.html
$dokka.location:arrow.core$leftIfNull(arrow.Kind((arrow.Kind((arrow.core.ForEither, arrow.core.leftIfNull.A)), arrow.core.leftIfNull.B)), kotlin.Function0((arrow.core.leftIfNull.A)))arrow.core/arrow.-kind/left-if-null.html
$dokka.location:arrow.core$mapNullable(kotlin.Function1((arrow.core.mapNullable.T, kotlin.Boolean)))arrow.core/kotlin.-function1/map-nullable.html
$dokka.location:arrow.core$maybe(kotlin.Boolean, kotlin.Function0((arrow.core.maybe.A)))arrow.core/kotlin.-boolean/maybe.html
$dokka.location:arrow.core$or(arrow.Kind((arrow.core.ForOption, arrow.core.or.T)), arrow.core.Option((arrow.core.or.T)))arrow.core/arrow.-kind/or.html
$dokka.location:arrow.core$orElse(arrow.Kind((arrow.core.ForOption, arrow.core.orElse.A)), kotlin.Function0((arrow.core.Option((arrow.core.orElse.A)))))arrow.core/arrow.-kind/or-else.html
$dokka.location:arrow.core$orElse(arrow.Kind((arrow.core.ForTry, arrow.core.orElse.A)), kotlin.Function0((arrow.Kind((arrow.core.ForTry, arrow.core.orElse.B)))))arrow.core/arrow.-kind/or-else.html
$dokka.location:arrow.core$orNull(arrow.Kind((arrow.Kind((arrow.core.ForEither, kotlin.Any)), arrow.core.orNull.B)))arrow.core/arrow.-kind/or-null.html
$dokka.location:arrow.core$orNull(arrow.Kind((arrow.core.ForTry, arrow.core.orNull.B)))arrow.core/arrow.-kind/or-null.html
$dokka.location:arrow.core$plus(kotlin.collections.Map((arrow.core.plus.K, arrow.core.plus.V)), arrow.core.Tuple2((arrow.core.plus.K, arrow.core.plus.V)))arrow.core/kotlin.collections.-map/plus.html
$dokka.location:arrow.core$plus(kotlin.collections.Map((arrow.core.plus.K, arrow.core.plus.V)), kotlin.Array((arrow.core.Tuple2((arrow.core.plus.K, arrow.core.plus.V)))))arrow.core/kotlin.collections.-map/plus.html
$dokka.location:arrow.core$plus(kotlin.collections.Map((arrow.core.plus.K, arrow.core.plus.V)), kotlin.collections.Iterable((arrow.core.Tuple2((arrow.core.plus.K, arrow.core.plus.V)))))arrow.core/kotlin.collections.-map/plus.html
$dokka.location:arrow.core$plus(kotlin.collections.Map((arrow.core.plus.K, arrow.core.plus.V)), kotlin.sequences.Sequence((arrow.core.Tuple2((arrow.core.plus.K, arrow.core.plus.V)))))arrow.core/kotlin.collections.-map/plus.html
$dokka.location:arrow.core$recover(arrow.Kind((arrow.core.ForTry, arrow.core.recover.B)), kotlin.Function1((kotlin.Throwable, arrow.core.recover.B)))arrow.core/arrow.-kind/recover.html
$dokka.location:arrow.core$recoverWith(arrow.Kind((arrow.core.ForTry, arrow.core.recoverWith.B)), kotlin.Function1((kotlin.Throwable, arrow.Kind((arrow.core.ForTry, arrow.core.recoverWith.B)))))arrow.core/arrow.-kind/recover-with.html
$dokka.location:arrow.core$rescue(arrow.Kind((arrow.core.ForTry, arrow.core.rescue.A)), kotlin.Function1((kotlin.Throwable, arrow.Kind((arrow.core.ForTry, arrow.core.rescue.A)))))arrow.core/arrow.-kind/rescue.html
$dokka.location:arrow.core$singleOrNone(kotlin.collections.Iterable((arrow.core.singleOrNone.T)))arrow.core/kotlin.collections.-iterable/single-or-none.html
$dokka.location:arrow.core$singleOrNone(kotlin.collections.Iterable((arrow.core.singleOrNone.T)), kotlin.Function1((arrow.core.singleOrNone.T, kotlin.Boolean)))arrow.core/kotlin.collections.-iterable/single-or-none.html
$dokka.location:arrow.core$then(kotlin.Function1((arrow.core.then.A, kotlin.Boolean)), kotlin.Function1((arrow.core.then.A, arrow.core.then.B)))arrow.core/kotlin.-function1/then.html
$dokka.location:arrow.core$toMap(kotlin.Array((arrow.core.Tuple2((arrow.core.toMap.K, arrow.core.toMap.V)))))arrow.core/kotlin.-array/to-map.html
$dokka.location:arrow.core$toMap(kotlin.collections.Iterable((arrow.core.Tuple2((arrow.core.toMap.K, arrow.core.toMap.V)))))arrow.core/kotlin.collections.-iterable/to-map.html
$dokka.location:arrow.core$toMap(kotlin.sequences.Sequence((arrow.core.Tuple2((arrow.core.toMap.K, arrow.core.toMap.V)))))arrow.core/kotlin.sequences.-sequence/to-map.html
$dokka.location:arrow.core$toPartialFunction(kotlin.Function1((arrow.core.toPartialFunction.A, arrow.core.toPartialFunction.B)), kotlin.Function1((arrow.core.toPartialFunction.A, kotlin.Boolean)))arrow.core/kotlin.-function1/to-partial-function.html
$dokka.location:arrow.core$toTuple2(kotlin.Pair((arrow.core.toTuple2.K, arrow.core.toTuple2.V)))arrow.core/kotlin.-pair/to-tuple2.html
$dokka.location:arrow.core$toTuple2(kotlin.collections.Map.Entry((arrow.core.toTuple2.K, arrow.core.toTuple2.V)))arrow.core/kotlin.collections.-map.-entry/to-tuple2.html
$dokka.location:arrow.core$try_(kotlin.Function0((arrow.core.try_.A)))arrow.core/kotlin.-function0/try_.html
$dokka.location:arrow.core$value(arrow.Kind((arrow.core.ForId, arrow.core.value.A)))arrow.core/arrow.-kind/value.html
arrow.core
