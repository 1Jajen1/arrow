$dokka.format:jekyll
$dokka.linkExtension:html
$dokka.location:arrow.free$ap(arrow.Kind((arrow.Kind((arrow.free.ForFree, arrow.free.ap.S)), arrow.free.ap.A)), arrow.Kind((arrow.Kind((arrow.free.ForFree, arrow.free.ap.S)), kotlin.Function1((arrow.free.ap.A, arrow.free.ap.B)))))arrow.free/arrow.-kind/ap.html
$dokka.location:arrow.free$bindingStackSafe(arrow.typeclasses.Monad((arrow.free.bindingStackSafe.F)), kotlin.SuspendFunction1((arrow.free.StackSafeMonadContinuation((arrow.free.bindingStackSafe.F, kotlin.Any)), arrow.free.bindingStackSafe.B)))arrow.free/arrow.typeclasses.-monad/binding-stack-safe.html
$dokka.location:arrow.free$fix(arrow.Kind((arrow.Kind((arrow.Kind((arrow.free.ForCoyoneda, arrow.free.fix.F)), arrow.free.fix.P)), arrow.free.fix.A)))arrow.free/arrow.-kind/fix.html
$dokka.location:arrow.free$fix(arrow.Kind((arrow.Kind((arrow.free.ForCofree, arrow.free.fix.S)), arrow.free.fix.A)))arrow.free/arrow.-kind/fix.html
$dokka.location:arrow.free$fix(arrow.Kind((arrow.Kind((arrow.free.ForFree, arrow.free.fix.S)), arrow.free.fix.A)))arrow.free/arrow.-kind/fix.html
$dokka.location:arrow.free$fix(arrow.Kind((arrow.Kind((arrow.free.ForFreeApplicative, arrow.free.fix.F)), arrow.free.fix.A)))arrow.free/arrow.-kind/fix.html
$dokka.location:arrow.free$fix(arrow.Kind((arrow.Kind((arrow.free.ForYoneda, arrow.free.fix.F)), arrow.free.fix.A)))arrow.free/arrow.-kind/fix.html
$dokka.location:arrow.free$flatMap(arrow.Kind((arrow.Kind((arrow.free.ForFree, arrow.free.flatMap.S)), arrow.free.flatMap.A)), kotlin.Function1((arrow.free.flatMap.A, arrow.free.Free((arrow.free.flatMap.S, arrow.free.flatMap.B)))))arrow.free/arrow.-kind/flat-map.html
$dokka.location:arrow.free$foldK(arrow.Kind((arrow.Kind((arrow.free.ForFreeApplicative, arrow.free.foldK.F)), arrow.free.foldK.A)), arrow.typeclasses.Applicative((arrow.free.foldK.F)))arrow.free/arrow.-kind/fold-k.html
$dokka.location:arrow.free$foldMapK(arrow.Kind((arrow.Kind((arrow.free.ForFree, arrow.free.foldMapK.S)), arrow.free.foldMapK.A)), arrow.core.FunctionK((arrow.free.foldMapK.S, arrow.free.foldMapK.M)), arrow.typeclasses.Monad((arrow.free.foldMapK.M)))arrow.free/arrow.-kind/fold-map-k.html
$dokka.location:arrow.free$foldMapK(arrow.Kind((arrow.Kind((arrow.free.ForFreeApplicative, arrow.free.foldMapK.F)), arrow.free.foldMapK.A)), arrow.core.FunctionK((arrow.free.foldMapK.F, arrow.free.foldMapK.G)), arrow.typeclasses.Applicative((arrow.free.foldMapK.G)))arrow.free/arrow.-kind/fold-map-k.html
$dokka.location:arrow.free$map(arrow.Kind((arrow.Kind((arrow.free.ForFree, arrow.free.map.S)), arrow.free.map.A)), kotlin.Function1((arrow.free.map.A, arrow.free.map.B)))arrow.free/arrow.-kind/map.html
$dokka.location:arrow.free$runK(arrow.Kind((arrow.Kind((arrow.free.ForFree, arrow.free.runK.F)), arrow.free.runK.A)), arrow.typeclasses.Monad((arrow.free.runK.F)))arrow.free/arrow.-kind/run-k.html
arrow.free
