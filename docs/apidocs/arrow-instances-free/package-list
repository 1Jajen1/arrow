$dokka.format:jekyll
$dokka.linkExtension:html
$dokka.location:arrow.free.instances.cofree.comonad$coflatMap(arrow.Kind((arrow.Kind((arrow.free.ForCofree, arrow.free.instances.cofree.comonad.coflatMap.S)), arrow.free.instances.cofree.comonad.coflatMap.A)), kotlin.Function1((arrow.Kind((arrow.Kind((arrow.free.ForCofree, arrow.free.instances.cofree.comonad.coflatMap.S)), arrow.free.instances.cofree.comonad.coflatMap.A)), arrow.free.instances.cofree.comonad.coflatMap.B)))arrow.free.instances.cofree.comonad/arrow.-kind/coflat-map.html
$dokka.location:arrow.free.instances.cofree.comonad$comonad(arrow.free.Cofree.Companion)arrow.free.instances.cofree.comonad/arrow.free.-cofree/comonad.html
$dokka.location:arrow.free.instances.cofree.comonad$duplicate(arrow.Kind((arrow.Kind((arrow.free.ForCofree, arrow.free.instances.cofree.comonad.duplicate.S)), arrow.free.instances.cofree.comonad.duplicate.A)))arrow.free.instances.cofree.comonad/arrow.-kind/duplicate.html
$dokka.location:arrow.free.instances.cofree.comonad$extract(arrow.Kind((arrow.Kind((arrow.free.ForCofree, arrow.free.instances.cofree.comonad.extract.S)), arrow.free.instances.cofree.comonad.extract.A)))arrow.free.instances.cofree.comonad/arrow.-kind/extract.html
$dokka.location:arrow.free.instances.cofree.functor$as(arrow.Kind((arrow.Kind((arrow.free.ForCofree, arrow.free.instances.cofree.functor.as.S)), arrow.free.instances.cofree.functor.as.A)), arrow.free.instances.cofree.functor.as.B)arrow.free.instances.cofree.functor/arrow.-kind/as.html
$dokka.location:arrow.free.instances.cofree.functor$fproduct(arrow.Kind((arrow.Kind((arrow.free.ForCofree, arrow.free.instances.cofree.functor.fproduct.S)), arrow.free.instances.cofree.functor.fproduct.A)), kotlin.Function1((arrow.free.instances.cofree.functor.fproduct.A, arrow.free.instances.cofree.functor.fproduct.B)))arrow.free.instances.cofree.functor/arrow.-kind/fproduct.html
$dokka.location:arrow.free.instances.cofree.functor$functor(arrow.free.Cofree.Companion)arrow.free.instances.cofree.functor/arrow.free.-cofree/functor.html
$dokka.location:arrow.free.instances.cofree.functor$imap(arrow.Kind((arrow.Kind((arrow.free.ForCofree, arrow.free.instances.cofree.functor.imap.S)), arrow.free.instances.cofree.functor.imap.A)), kotlin.Function1((arrow.free.instances.cofree.functor.imap.A, arrow.free.instances.cofree.functor.imap.B)), kotlin.Function1((arrow.free.instances.cofree.functor.imap.B, arrow.free.instances.cofree.functor.imap.A)))arrow.free.instances.cofree.functor/arrow.-kind/imap.html
$dokka.location:arrow.free.instances.cofree.functor$map(arrow.Kind((arrow.Kind((arrow.free.ForCofree, arrow.free.instances.cofree.functor.map.S)), arrow.free.instances.cofree.functor.map.A)), kotlin.Function1((arrow.free.instances.cofree.functor.map.A, arrow.free.instances.cofree.functor.map.B)))arrow.free.instances.cofree.functor/arrow.-kind/map.html
$dokka.location:arrow.free.instances.cofree.functor$tupleLeft(arrow.Kind((arrow.Kind((arrow.free.ForCofree, arrow.free.instances.cofree.functor.tupleLeft.S)), arrow.free.instances.cofree.functor.tupleLeft.A)), arrow.free.instances.cofree.functor.tupleLeft.B)arrow.free.instances.cofree.functor/arrow.-kind/tuple-left.html
$dokka.location:arrow.free.instances.cofree.functor$tupleRight(arrow.Kind((arrow.Kind((arrow.free.ForCofree, arrow.free.instances.cofree.functor.tupleRight.S)), arrow.free.instances.cofree.functor.tupleRight.A)), arrow.free.instances.cofree.functor.tupleRight.B)arrow.free.instances.cofree.functor/arrow.-kind/tuple-right.html
$dokka.location:arrow.free.instances.cofree.functor$void(arrow.Kind((arrow.Kind((arrow.free.ForCofree, arrow.free.instances.cofree.functor.void.S)), arrow.free.instances.cofree.functor.void.A)))arrow.free.instances.cofree.functor/arrow.-kind/void.html
$dokka.location:arrow.free.instances.cofree.functor$widen(arrow.Kind((arrow.Kind((arrow.free.ForCofree, arrow.free.instances.cofree.functor.widen.S)), arrow.free.instances.cofree.functor.widen.A)))arrow.free.instances.cofree.functor/arrow.-kind/widen.html
$dokka.location:arrow.free.instances.coyoneda.functor$as(arrow.Kind((arrow.Kind((arrow.Kind((arrow.free.ForCoyoneda, arrow.free.instances.coyoneda.functor.as.F)), arrow.free.instances.coyoneda.functor.as.G)), arrow.free.instances.coyoneda.functor.as.A)), arrow.free.instances.coyoneda.functor.as.B)arrow.free.instances.coyoneda.functor/arrow.-kind/as.html
$dokka.location:arrow.free.instances.coyoneda.functor$fproduct(arrow.Kind((arrow.Kind((arrow.Kind((arrow.free.ForCoyoneda, arrow.free.instances.coyoneda.functor.fproduct.F)), arrow.free.instances.coyoneda.functor.fproduct.G)), arrow.free.instances.coyoneda.functor.fproduct.A)), kotlin.Function1((arrow.free.instances.coyoneda.functor.fproduct.A, arrow.free.instances.coyoneda.functor.fproduct.B)))arrow.free.instances.coyoneda.functor/arrow.-kind/fproduct.html
$dokka.location:arrow.free.instances.coyoneda.functor$functor(arrow.free.Coyoneda.Companion)arrow.free.instances.coyoneda.functor/arrow.free.-coyoneda/functor.html
$dokka.location:arrow.free.instances.coyoneda.functor$imap(arrow.Kind((arrow.Kind((arrow.Kind((arrow.free.ForCoyoneda, arrow.free.instances.coyoneda.functor.imap.F)), arrow.free.instances.coyoneda.functor.imap.G)), arrow.free.instances.coyoneda.functor.imap.A)), kotlin.Function1((arrow.free.instances.coyoneda.functor.imap.A, arrow.free.instances.coyoneda.functor.imap.B)), kotlin.Function1((arrow.free.instances.coyoneda.functor.imap.B, arrow.free.instances.coyoneda.functor.imap.A)))arrow.free.instances.coyoneda.functor/arrow.-kind/imap.html
$dokka.location:arrow.free.instances.coyoneda.functor$map(arrow.Kind((arrow.Kind((arrow.Kind((arrow.free.ForCoyoneda, arrow.free.instances.coyoneda.functor.map.F)), arrow.free.instances.coyoneda.functor.map.G)), arrow.free.instances.coyoneda.functor.map.A)), kotlin.Function1((arrow.free.instances.coyoneda.functor.map.A, arrow.free.instances.coyoneda.functor.map.B)))arrow.free.instances.coyoneda.functor/arrow.-kind/map.html
$dokka.location:arrow.free.instances.coyoneda.functor$tupleLeft(arrow.Kind((arrow.Kind((arrow.Kind((arrow.free.ForCoyoneda, arrow.free.instances.coyoneda.functor.tupleLeft.F)), arrow.free.instances.coyoneda.functor.tupleLeft.G)), arrow.free.instances.coyoneda.functor.tupleLeft.A)), arrow.free.instances.coyoneda.functor.tupleLeft.B)arrow.free.instances.coyoneda.functor/arrow.-kind/tuple-left.html
$dokka.location:arrow.free.instances.coyoneda.functor$tupleRight(arrow.Kind((arrow.Kind((arrow.Kind((arrow.free.ForCoyoneda, arrow.free.instances.coyoneda.functor.tupleRight.F)), arrow.free.instances.coyoneda.functor.tupleRight.G)), arrow.free.instances.coyoneda.functor.tupleRight.A)), arrow.free.instances.coyoneda.functor.tupleRight.B)arrow.free.instances.coyoneda.functor/arrow.-kind/tuple-right.html
$dokka.location:arrow.free.instances.coyoneda.functor$void(arrow.Kind((arrow.Kind((arrow.Kind((arrow.free.ForCoyoneda, arrow.free.instances.coyoneda.functor.void.F)), arrow.free.instances.coyoneda.functor.void.G)), arrow.free.instances.coyoneda.functor.void.A)))arrow.free.instances.coyoneda.functor/arrow.-kind/void.html
$dokka.location:arrow.free.instances.coyoneda.functor$widen(arrow.Kind((arrow.Kind((arrow.Kind((arrow.free.ForCoyoneda, arrow.free.instances.coyoneda.functor.widen.F)), arrow.free.instances.coyoneda.functor.widen.G)), arrow.free.instances.coyoneda.functor.widen.A)))arrow.free.instances.coyoneda.functor/arrow.-kind/widen.html
$dokka.location:arrow.free.instances.free.applicative$ap(arrow.Kind((arrow.Kind((arrow.free.ForFree, arrow.free.instances.free.applicative.ap.S)), arrow.free.instances.free.applicative.ap.A)), arrow.Kind((arrow.Kind((arrow.free.ForFree, arrow.free.instances.free.applicative.ap.S)), kotlin.Function1((arrow.free.instances.free.applicative.ap.A, arrow.free.instances.free.applicative.ap.B)))))arrow.free.instances.free.applicative/arrow.-kind/ap.html
$dokka.location:arrow.free.instances.free.applicative$applicative(arrow.free.Free.Companion)arrow.free.instances.free.applicative/arrow.free.-free/applicative.html
$dokka.location:arrow.free.instances.free.applicative$map(arrow.Kind((arrow.Kind((arrow.free.ForFree, arrow.free.instances.free.applicative.map.S)), arrow.free.instances.free.applicative.map.A)), kotlin.Function1((arrow.free.instances.free.applicative.map.A, arrow.free.instances.free.applicative.map.B)))arrow.free.instances.free.applicative/arrow.-kind/map.html
$dokka.location:arrow.free.instances.free.applicative$map2(arrow.Kind((arrow.Kind((arrow.free.ForFree, arrow.free.instances.free.applicative.map2.S)), arrow.free.instances.free.applicative.map2.A)), arrow.Kind((arrow.Kind((arrow.free.ForFree, arrow.free.instances.free.applicative.map2.S)), arrow.free.instances.free.applicative.map2.B)), kotlin.Function1((arrow.core.Tuple2((arrow.free.instances.free.applicative.map2.A, arrow.free.instances.free.applicative.map2.B)), arrow.free.instances.free.applicative.map2.Z)))arrow.free.instances.free.applicative/arrow.-kind/map2.html
$dokka.location:arrow.free.instances.free.applicative$map2Eval(arrow.Kind((arrow.Kind((arrow.free.ForFree, arrow.free.instances.free.applicative.map2Eval.S)), arrow.free.instances.free.applicative.map2Eval.A)), arrow.core.Eval((arrow.Kind((arrow.Kind((arrow.free.ForFree, arrow.free.instances.free.applicative.map2Eval.S)), arrow.free.instances.free.applicative.map2Eval.B)))), kotlin.Function1((arrow.core.Tuple2((arrow.free.instances.free.applicative.map2Eval.A, arrow.free.instances.free.applicative.map2Eval.B)), arrow.free.instances.free.applicative.map2Eval.Z)))arrow.free.instances.free.applicative/arrow.-kind/map2-eval.html
$dokka.location:arrow.free.instances.free.applicative$plus(arrow.Kind((arrow.Kind((arrow.free.ForFree, arrow.free.instances.free.applicative.plus.S)), java.math.BigDecimal)), arrow.Kind((arrow.Kind((arrow.free.ForFree, arrow.free.instances.free.applicative.plus.S)), java.math.BigDecimal)))arrow.free.instances.free.applicative/arrow.-kind/plus.html
$dokka.location:arrow.free.instances.free.applicative$product(arrow.Kind((arrow.Kind((arrow.free.ForFree, arrow.free.instances.free.applicative.product.S)), arrow.core.Tuple2((arrow.free.instances.free.applicative.product.A, arrow.free.instances.free.applicative.product.B)))), arrow.Kind((arrow.Kind((arrow.free.ForFree, arrow.free.instances.free.applicative.product.S)), arrow.free.instances.free.applicative.product.Z)))arrow.free.instances.free.applicative/arrow.-kind/product.html
$dokka.location:arrow.free.instances.free.applicative$product(arrow.Kind((arrow.Kind((arrow.free.ForFree, arrow.free.instances.free.applicative.product.S)), arrow.core.Tuple3((arrow.free.instances.free.applicative.product.A, arrow.free.instances.free.applicative.product.B, arrow.free.instances.free.applicative.product.C)))), arrow.Kind((arrow.Kind((arrow.free.ForFree, arrow.free.instances.free.applicative.product.S)), arrow.free.instances.free.applicative.product.Z)))arrow.free.instances.free.applicative/arrow.-kind/product.html
$dokka.location:arrow.free.instances.free.applicative$product(arrow.Kind((arrow.Kind((arrow.free.ForFree, arrow.free.instances.free.applicative.product.S)), arrow.core.Tuple4((arrow.free.instances.free.applicative.product.A, arrow.free.instances.free.applicative.product.B, arrow.free.instances.free.applicative.product.C, arrow.free.instances.free.applicative.product.D)))), arrow.Kind((arrow.Kind((arrow.free.ForFree, arrow.free.instances.free.applicative.product.S)), arrow.free.instances.free.applicative.product.Z)))arrow.free.instances.free.applicative/arrow.-kind/product.html
$dokka.location:arrow.free.instances.free.applicative$product(arrow.Kind((arrow.Kind((arrow.free.ForFree, arrow.free.instances.free.applicative.product.S)), arrow.core.Tuple5((arrow.free.instances.free.applicative.product.A, arrow.free.instances.free.applicative.product.B, arrow.free.instances.free.applicative.product.C, arrow.free.instances.free.applicative.product.D, arrow.free.instances.free.applicative.product.E)))), arrow.Kind((arrow.Kind((arrow.free.ForFree, arrow.free.instances.free.applicative.product.S)), arrow.free.instances.free.applicative.product.Z)))arrow.free.instances.free.applicative/arrow.-kind/product.html
$dokka.location:arrow.free.instances.free.applicative$product(arrow.Kind((arrow.Kind((arrow.free.ForFree, arrow.free.instances.free.applicative.product.S)), arrow.core.Tuple6((arrow.free.instances.free.applicative.product.A, arrow.free.instances.free.applicative.product.B, arrow.free.instances.free.applicative.product.C, arrow.free.instances.free.applicative.product.D, arrow.free.instances.free.applicative.product.E, arrow.free.instances.free.applicative.product.FF)))), arrow.Kind((arrow.Kind((arrow.free.ForFree, arrow.free.instances.free.applicative.product.S)), arrow.free.instances.free.applicative.product.Z)))arrow.free.instances.free.applicative/arrow.-kind/product.html
$dokka.location:arrow.free.instances.free.applicative$product(arrow.Kind((arrow.Kind((arrow.free.ForFree, arrow.free.instances.free.applicative.product.S)), arrow.core.Tuple7((arrow.free.instances.free.applicative.product.A, arrow.free.instances.free.applicative.product.B, arrow.free.instances.free.applicative.product.C, arrow.free.instances.free.applicative.product.D, arrow.free.instances.free.applicative.product.E, arrow.free.instances.free.applicative.product.FF, arrow.free.instances.free.applicative.product.G)))), arrow.Kind((arrow.Kind((arrow.free.ForFree, arrow.free.instances.free.applicative.product.S)), arrow.free.instances.free.applicative.product.Z)))arrow.free.instances.free.applicative/arrow.-kind/product.html
$dokka.location:arrow.free.instances.free.applicative$product(arrow.Kind((arrow.Kind((arrow.free.ForFree, arrow.free.instances.free.applicative.product.S)), arrow.core.Tuple8((arrow.free.instances.free.applicative.product.A, arrow.free.instances.free.applicative.product.B, arrow.free.instances.free.applicative.product.C, arrow.free.instances.free.applicative.product.D, arrow.free.instances.free.applicative.product.E, arrow.free.instances.free.applicative.product.FF, arrow.free.instances.free.applicative.product.G, arrow.free.instances.free.applicative.product.H)))), arrow.Kind((arrow.Kind((arrow.free.ForFree, arrow.free.instances.free.applicative.product.S)), arrow.free.instances.free.applicative.product.Z)))arrow.free.instances.free.applicative/arrow.-kind/product.html
$dokka.location:arrow.free.instances.free.applicative$product(arrow.Kind((arrow.Kind((arrow.free.ForFree, arrow.free.instances.free.applicative.product.S)), arrow.core.Tuple9((arrow.free.instances.free.applicative.product.A, arrow.free.instances.free.applicative.product.B, arrow.free.instances.free.applicative.product.C, arrow.free.instances.free.applicative.product.D, arrow.free.instances.free.applicative.product.E, arrow.free.instances.free.applicative.product.FF, arrow.free.instances.free.applicative.product.G, arrow.free.instances.free.applicative.product.H, arrow.free.instances.free.applicative.product.I)))), arrow.Kind((arrow.Kind((arrow.free.ForFree, arrow.free.instances.free.applicative.product.S)), arrow.free.instances.free.applicative.product.Z)))arrow.free.instances.free.applicative/arrow.-kind/product.html
$dokka.location:arrow.free.instances.free.applicative$product(arrow.Kind((arrow.Kind((arrow.free.ForFree, arrow.free.instances.free.applicative.product.S)), arrow.free.instances.free.applicative.product.A)), arrow.Kind((arrow.Kind((arrow.free.ForFree, arrow.free.instances.free.applicative.product.S)), arrow.free.instances.free.applicative.product.B)))arrow.free.instances.free.applicative/arrow.-kind/product.html
$dokka.location:arrow.free.instances.free.eq$eq(arrow.free.Free.Companion, arrow.typeclasses.Monad((arrow.free.instances.free.eq.eq.G)), arrow.core.FunctionK((arrow.free.instances.free.eq.eq.F, arrow.free.instances.free.eq.eq.G)))arrow.free.instances.free.eq/arrow.free.-free/eq.html
$dokka.location:arrow.free.instances.free.eq$eqv(arrow.Kind((arrow.Kind((arrow.free.ForFree, arrow.free.instances.free.eq.eqv.F)), arrow.free.instances.free.eq.eqv.A)), arrow.Kind((arrow.Kind((arrow.free.ForFree, arrow.free.instances.free.eq.eqv.F)), arrow.free.instances.free.eq.eqv.A)), arrow.typeclasses.Monad((arrow.free.instances.free.eq.eqv.G)), arrow.core.FunctionK((arrow.free.instances.free.eq.eqv.F, arrow.free.instances.free.eq.eqv.G)))arrow.free.instances.free.eq/arrow.-kind/eqv.html
$dokka.location:arrow.free.instances.free.eq$neqv(arrow.Kind((arrow.Kind((arrow.free.ForFree, arrow.free.instances.free.eq.neqv.F)), arrow.free.instances.free.eq.neqv.A)), arrow.Kind((arrow.Kind((arrow.free.ForFree, arrow.free.instances.free.eq.neqv.F)), arrow.free.instances.free.eq.neqv.A)), arrow.typeclasses.Monad((arrow.free.instances.free.eq.neqv.G)), arrow.core.FunctionK((arrow.free.instances.free.eq.neqv.F, arrow.free.instances.free.eq.neqv.G)))arrow.free.instances.free.eq/arrow.-kind/neqv.html
$dokka.location:arrow.free.instances.free.functor$as(arrow.Kind((arrow.Kind((arrow.free.ForFree, arrow.free.instances.free.functor.as.S)), arrow.free.instances.free.functor.as.A)), arrow.free.instances.free.functor.as.B)arrow.free.instances.free.functor/arrow.-kind/as.html
$dokka.location:arrow.free.instances.free.functor$fproduct(arrow.Kind((arrow.Kind((arrow.free.ForFree, arrow.free.instances.free.functor.fproduct.S)), arrow.free.instances.free.functor.fproduct.A)), kotlin.Function1((arrow.free.instances.free.functor.fproduct.A, arrow.free.instances.free.functor.fproduct.B)))arrow.free.instances.free.functor/arrow.-kind/fproduct.html
$dokka.location:arrow.free.instances.free.functor$functor(arrow.free.Free.Companion)arrow.free.instances.free.functor/arrow.free.-free/functor.html
$dokka.location:arrow.free.instances.free.functor$imap(arrow.Kind((arrow.Kind((arrow.free.ForFree, arrow.free.instances.free.functor.imap.S)), arrow.free.instances.free.functor.imap.A)), kotlin.Function1((arrow.free.instances.free.functor.imap.A, arrow.free.instances.free.functor.imap.B)), kotlin.Function1((arrow.free.instances.free.functor.imap.B, arrow.free.instances.free.functor.imap.A)))arrow.free.instances.free.functor/arrow.-kind/imap.html
$dokka.location:arrow.free.instances.free.functor$map(arrow.Kind((arrow.Kind((arrow.free.ForFree, arrow.free.instances.free.functor.map.S)), arrow.free.instances.free.functor.map.A)), kotlin.Function1((arrow.free.instances.free.functor.map.A, arrow.free.instances.free.functor.map.B)))arrow.free.instances.free.functor/arrow.-kind/map.html
$dokka.location:arrow.free.instances.free.functor$tupleLeft(arrow.Kind((arrow.Kind((arrow.free.ForFree, arrow.free.instances.free.functor.tupleLeft.S)), arrow.free.instances.free.functor.tupleLeft.A)), arrow.free.instances.free.functor.tupleLeft.B)arrow.free.instances.free.functor/arrow.-kind/tuple-left.html
$dokka.location:arrow.free.instances.free.functor$tupleRight(arrow.Kind((arrow.Kind((arrow.free.ForFree, arrow.free.instances.free.functor.tupleRight.S)), arrow.free.instances.free.functor.tupleRight.A)), arrow.free.instances.free.functor.tupleRight.B)arrow.free.instances.free.functor/arrow.-kind/tuple-right.html
$dokka.location:arrow.free.instances.free.functor$void(arrow.Kind((arrow.Kind((arrow.free.ForFree, arrow.free.instances.free.functor.void.S)), arrow.free.instances.free.functor.void.A)))arrow.free.instances.free.functor/arrow.-kind/void.html
$dokka.location:arrow.free.instances.free.functor$widen(arrow.Kind((arrow.Kind((arrow.free.ForFree, arrow.free.instances.free.functor.widen.S)), arrow.free.instances.free.functor.widen.A)))arrow.free.instances.free.functor/arrow.-kind/widen.html
$dokka.location:arrow.free.instances.free.monad$ap(arrow.Kind((arrow.Kind((arrow.free.ForFree, arrow.free.instances.free.monad.ap.S)), arrow.free.instances.free.monad.ap.A)), arrow.Kind((arrow.Kind((arrow.free.ForFree, arrow.free.instances.free.monad.ap.S)), kotlin.Function1((arrow.free.instances.free.monad.ap.A, arrow.free.instances.free.monad.ap.B)))))arrow.free.instances.free.monad/arrow.-kind/ap.html
$dokka.location:arrow.free.instances.free.monad$effectM(arrow.Kind((arrow.Kind((arrow.free.ForFree, arrow.free.instances.free.monad.effectM.S)), arrow.free.instances.free.monad.effectM.A)), kotlin.Function1((arrow.free.instances.free.monad.effectM.A, arrow.Kind((arrow.Kind((arrow.free.ForFree, arrow.free.instances.free.monad.effectM.S)), arrow.free.instances.free.monad.effectM.B)))))arrow.free.instances.free.monad/arrow.-kind/effect-m.html
$dokka.location:arrow.free.instances.free.monad$flatMap(arrow.Kind((arrow.Kind((arrow.free.ForFree, arrow.free.instances.free.monad.flatMap.S)), arrow.free.instances.free.monad.flatMap.A)), kotlin.Function1((arrow.free.instances.free.monad.flatMap.A, arrow.Kind((arrow.Kind((arrow.free.ForFree, arrow.free.instances.free.monad.flatMap.S)), arrow.free.instances.free.monad.flatMap.B)))))arrow.free.instances.free.monad/arrow.-kind/flat-map.html
$dokka.location:arrow.free.instances.free.monad$flatten(arrow.Kind((arrow.Kind((arrow.free.ForFree, arrow.free.instances.free.monad.flatten.S)), arrow.Kind((, arrow.free.instances.free.monad.flatten.A)))))arrow.free.instances.free.monad/arrow.-kind/flatten.html
$dokka.location:arrow.free.instances.free.monad$followedBy(arrow.Kind((arrow.Kind((arrow.free.ForFree, arrow.free.instances.free.monad.followedBy.S)), arrow.free.instances.free.monad.followedBy.A)), arrow.Kind((arrow.Kind((arrow.free.ForFree, arrow.free.instances.free.monad.followedBy.S)), arrow.free.instances.free.monad.followedBy.B)))arrow.free.instances.free.monad/arrow.-kind/followed-by.html
$dokka.location:arrow.free.instances.free.monad$followedByEval(arrow.Kind((arrow.Kind((arrow.free.ForFree, arrow.free.instances.free.monad.followedByEval.S)), arrow.free.instances.free.monad.followedByEval.A)), arrow.core.Eval((arrow.Kind((arrow.Kind((arrow.free.ForFree, arrow.free.instances.free.monad.followedByEval.S)), arrow.free.instances.free.monad.followedByEval.B)))))arrow.free.instances.free.monad/arrow.-kind/followed-by-eval.html
$dokka.location:arrow.free.instances.free.monad$forEffect(arrow.Kind((arrow.Kind((arrow.free.ForFree, arrow.free.instances.free.monad.forEffect.S)), arrow.free.instances.free.monad.forEffect.A)), arrow.Kind((arrow.Kind((arrow.free.ForFree, arrow.free.instances.free.monad.forEffect.S)), arrow.free.instances.free.monad.forEffect.B)))arrow.free.instances.free.monad/arrow.-kind/for-effect.html
$dokka.location:arrow.free.instances.free.monad$forEffectEval(arrow.Kind((arrow.Kind((arrow.free.ForFree, arrow.free.instances.free.monad.forEffectEval.S)), arrow.free.instances.free.monad.forEffectEval.A)), arrow.core.Eval((arrow.Kind((arrow.Kind((arrow.free.ForFree, arrow.free.instances.free.monad.forEffectEval.S)), arrow.free.instances.free.monad.forEffectEval.B)))))arrow.free.instances.free.monad/arrow.-kind/for-effect-eval.html
$dokka.location:arrow.free.instances.free.monad$ifM(arrow.Kind((arrow.Kind((arrow.free.ForFree, arrow.free.instances.free.monad.ifM.S)), kotlin.Boolean)), kotlin.Function0((arrow.Kind((arrow.Kind((arrow.free.ForFree, arrow.free.instances.free.monad.ifM.S)), arrow.free.instances.free.monad.ifM.B)))), kotlin.Function0((arrow.Kind((arrow.Kind((arrow.free.ForFree, arrow.free.instances.free.monad.ifM.S)), arrow.free.instances.free.monad.ifM.B)))))arrow.free.instances.free.monad/arrow.-kind/if-m.html
$dokka.location:arrow.free.instances.free.monad$map(arrow.Kind((arrow.Kind((arrow.free.ForFree, arrow.free.instances.free.monad.map.S)), arrow.free.instances.free.monad.map.A)), kotlin.Function1((arrow.free.instances.free.monad.map.A, arrow.free.instances.free.monad.map.B)))arrow.free.instances.free.monad/arrow.-kind/map.html
$dokka.location:arrow.free.instances.free.monad$monad(arrow.free.Free.Companion)arrow.free.instances.free.monad/arrow.free.-free/monad.html
$dokka.location:arrow.free.instances.free.monad$mproduct(arrow.Kind((arrow.Kind((arrow.free.ForFree, arrow.free.instances.free.monad.mproduct.S)), arrow.free.instances.free.monad.mproduct.A)), kotlin.Function1((arrow.free.instances.free.monad.mproduct.A, arrow.Kind((arrow.Kind((arrow.free.ForFree, arrow.free.instances.free.monad.mproduct.S)), arrow.free.instances.free.monad.mproduct.B)))))arrow.free.instances.free.monad/arrow.-kind/mproduct.html
$dokka.location:arrow.free.instances.freeapplicative.applicative$ap(arrow.Kind((arrow.Kind((arrow.free.ForFreeApplicative, arrow.free.instances.freeapplicative.applicative.ap.S)), arrow.free.instances.freeapplicative.applicative.ap.A)), arrow.Kind((arrow.Kind((arrow.free.ForFreeApplicative, arrow.free.instances.freeapplicative.applicative.ap.S)), kotlin.Function1((arrow.free.instances.freeapplicative.applicative.ap.A, arrow.free.instances.freeapplicative.applicative.ap.B)))))arrow.free.instances.freeapplicative.applicative/arrow.-kind/ap.html
$dokka.location:arrow.free.instances.freeapplicative.applicative$applicative(arrow.free.FreeApplicative.Companion)arrow.free.instances.freeapplicative.applicative/arrow.free.-free-applicative/applicative.html
$dokka.location:arrow.free.instances.freeapplicative.applicative$map(arrow.Kind((arrow.Kind((arrow.free.ForFreeApplicative, arrow.free.instances.freeapplicative.applicative.map.S)), arrow.free.instances.freeapplicative.applicative.map.A)), kotlin.Function1((arrow.free.instances.freeapplicative.applicative.map.A, arrow.free.instances.freeapplicative.applicative.map.B)))arrow.free.instances.freeapplicative.applicative/arrow.-kind/map.html
$dokka.location:arrow.free.instances.freeapplicative.applicative$map2(arrow.Kind((arrow.Kind((arrow.free.ForFreeApplicative, arrow.free.instances.freeapplicative.applicative.map2.S)), arrow.free.instances.freeapplicative.applicative.map2.A)), arrow.Kind((arrow.Kind((arrow.free.ForFreeApplicative, arrow.free.instances.freeapplicative.applicative.map2.S)), arrow.free.instances.freeapplicative.applicative.map2.B)), kotlin.Function1((arrow.core.Tuple2((arrow.free.instances.freeapplicative.applicative.map2.A, arrow.free.instances.freeapplicative.applicative.map2.B)), arrow.free.instances.freeapplicative.applicative.map2.Z)))arrow.free.instances.freeapplicative.applicative/arrow.-kind/map2.html
$dokka.location:arrow.free.instances.freeapplicative.applicative$map2Eval(arrow.Kind((arrow.Kind((arrow.free.ForFreeApplicative, arrow.free.instances.freeapplicative.applicative.map2Eval.S)), arrow.free.instances.freeapplicative.applicative.map2Eval.A)), arrow.core.Eval((arrow.Kind((arrow.Kind((arrow.free.ForFreeApplicative, arrow.free.instances.freeapplicative.applicative.map2Eval.S)), arrow.free.instances.freeapplicative.applicative.map2Eval.B)))), kotlin.Function1((arrow.core.Tuple2((arrow.free.instances.freeapplicative.applicative.map2Eval.A, arrow.free.instances.freeapplicative.applicative.map2Eval.B)), arrow.free.instances.freeapplicative.applicative.map2Eval.Z)))arrow.free.instances.freeapplicative.applicative/arrow.-kind/map2-eval.html
$dokka.location:arrow.free.instances.freeapplicative.applicative$plus(arrow.Kind((arrow.Kind((arrow.free.ForFreeApplicative, arrow.free.instances.freeapplicative.applicative.plus.S)), java.math.BigDecimal)), arrow.Kind((arrow.Kind((arrow.free.ForFreeApplicative, arrow.free.instances.freeapplicative.applicative.plus.S)), java.math.BigDecimal)))arrow.free.instances.freeapplicative.applicative/arrow.-kind/plus.html
$dokka.location:arrow.free.instances.freeapplicative.applicative$product(arrow.Kind((arrow.Kind((arrow.free.ForFreeApplicative, arrow.free.instances.freeapplicative.applicative.product.S)), arrow.core.Tuple2((arrow.free.instances.freeapplicative.applicative.product.A, arrow.free.instances.freeapplicative.applicative.product.B)))), arrow.Kind((arrow.Kind((arrow.free.ForFreeApplicative, arrow.free.instances.freeapplicative.applicative.product.S)), arrow.free.instances.freeapplicative.applicative.product.Z)))arrow.free.instances.freeapplicative.applicative/arrow.-kind/product.html
$dokka.location:arrow.free.instances.freeapplicative.applicative$product(arrow.Kind((arrow.Kind((arrow.free.ForFreeApplicative, arrow.free.instances.freeapplicative.applicative.product.S)), arrow.core.Tuple3((arrow.free.instances.freeapplicative.applicative.product.A, arrow.free.instances.freeapplicative.applicative.product.B, arrow.free.instances.freeapplicative.applicative.product.C)))), arrow.Kind((arrow.Kind((arrow.free.ForFreeApplicative, arrow.free.instances.freeapplicative.applicative.product.S)), arrow.free.instances.freeapplicative.applicative.product.Z)))arrow.free.instances.freeapplicative.applicative/arrow.-kind/product.html
$dokka.location:arrow.free.instances.freeapplicative.applicative$product(arrow.Kind((arrow.Kind((arrow.free.ForFreeApplicative, arrow.free.instances.freeapplicative.applicative.product.S)), arrow.core.Tuple4((arrow.free.instances.freeapplicative.applicative.product.A, arrow.free.instances.freeapplicative.applicative.product.B, arrow.free.instances.freeapplicative.applicative.product.C, arrow.free.instances.freeapplicative.applicative.product.D)))), arrow.Kind((arrow.Kind((arrow.free.ForFreeApplicative, arrow.free.instances.freeapplicative.applicative.product.S)), arrow.free.instances.freeapplicative.applicative.product.Z)))arrow.free.instances.freeapplicative.applicative/arrow.-kind/product.html
$dokka.location:arrow.free.instances.freeapplicative.applicative$product(arrow.Kind((arrow.Kind((arrow.free.ForFreeApplicative, arrow.free.instances.freeapplicative.applicative.product.S)), arrow.core.Tuple5((arrow.free.instances.freeapplicative.applicative.product.A, arrow.free.instances.freeapplicative.applicative.product.B, arrow.free.instances.freeapplicative.applicative.product.C, arrow.free.instances.freeapplicative.applicative.product.D, arrow.free.instances.freeapplicative.applicative.product.E)))), arrow.Kind((arrow.Kind((arrow.free.ForFreeApplicative, arrow.free.instances.freeapplicative.applicative.product.S)), arrow.free.instances.freeapplicative.applicative.product.Z)))arrow.free.instances.freeapplicative.applicative/arrow.-kind/product.html
$dokka.location:arrow.free.instances.freeapplicative.applicative$product(arrow.Kind((arrow.Kind((arrow.free.ForFreeApplicative, arrow.free.instances.freeapplicative.applicative.product.S)), arrow.core.Tuple6((arrow.free.instances.freeapplicative.applicative.product.A, arrow.free.instances.freeapplicative.applicative.product.B, arrow.free.instances.freeapplicative.applicative.product.C, arrow.free.instances.freeapplicative.applicative.product.D, arrow.free.instances.freeapplicative.applicative.product.E, arrow.free.instances.freeapplicative.applicative.product.FF)))), arrow.Kind((arrow.Kind((arrow.free.ForFreeApplicative, arrow.free.instances.freeapplicative.applicative.product.S)), arrow.free.instances.freeapplicative.applicative.product.Z)))arrow.free.instances.freeapplicative.applicative/arrow.-kind/product.html
$dokka.location:arrow.free.instances.freeapplicative.applicative$product(arrow.Kind((arrow.Kind((arrow.free.ForFreeApplicative, arrow.free.instances.freeapplicative.applicative.product.S)), arrow.core.Tuple7((arrow.free.instances.freeapplicative.applicative.product.A, arrow.free.instances.freeapplicative.applicative.product.B, arrow.free.instances.freeapplicative.applicative.product.C, arrow.free.instances.freeapplicative.applicative.product.D, arrow.free.instances.freeapplicative.applicative.product.E, arrow.free.instances.freeapplicative.applicative.product.FF, arrow.free.instances.freeapplicative.applicative.product.G)))), arrow.Kind((arrow.Kind((arrow.free.ForFreeApplicative, arrow.free.instances.freeapplicative.applicative.product.S)), arrow.free.instances.freeapplicative.applicative.product.Z)))arrow.free.instances.freeapplicative.applicative/arrow.-kind/product.html
$dokka.location:arrow.free.instances.freeapplicative.applicative$product(arrow.Kind((arrow.Kind((arrow.free.ForFreeApplicative, arrow.free.instances.freeapplicative.applicative.product.S)), arrow.core.Tuple8((arrow.free.instances.freeapplicative.applicative.product.A, arrow.free.instances.freeapplicative.applicative.product.B, arrow.free.instances.freeapplicative.applicative.product.C, arrow.free.instances.freeapplicative.applicative.product.D, arrow.free.instances.freeapplicative.applicative.product.E, arrow.free.instances.freeapplicative.applicative.product.FF, arrow.free.instances.freeapplicative.applicative.product.G, arrow.free.instances.freeapplicative.applicative.product.H)))), arrow.Kind((arrow.Kind((arrow.free.ForFreeApplicative, arrow.free.instances.freeapplicative.applicative.product.S)), arrow.free.instances.freeapplicative.applicative.product.Z)))arrow.free.instances.freeapplicative.applicative/arrow.-kind/product.html
$dokka.location:arrow.free.instances.freeapplicative.applicative$product(arrow.Kind((arrow.Kind((arrow.free.ForFreeApplicative, arrow.free.instances.freeapplicative.applicative.product.S)), arrow.core.Tuple9((arrow.free.instances.freeapplicative.applicative.product.A, arrow.free.instances.freeapplicative.applicative.product.B, arrow.free.instances.freeapplicative.applicative.product.C, arrow.free.instances.freeapplicative.applicative.product.D, arrow.free.instances.freeapplicative.applicative.product.E, arrow.free.instances.freeapplicative.applicative.product.FF, arrow.free.instances.freeapplicative.applicative.product.G, arrow.free.instances.freeapplicative.applicative.product.H, arrow.free.instances.freeapplicative.applicative.product.I)))), arrow.Kind((arrow.Kind((arrow.free.ForFreeApplicative, arrow.free.instances.freeapplicative.applicative.product.S)), arrow.free.instances.freeapplicative.applicative.product.Z)))arrow.free.instances.freeapplicative.applicative/arrow.-kind/product.html
$dokka.location:arrow.free.instances.freeapplicative.applicative$product(arrow.Kind((arrow.Kind((arrow.free.ForFreeApplicative, arrow.free.instances.freeapplicative.applicative.product.S)), arrow.free.instances.freeapplicative.applicative.product.A)), arrow.Kind((arrow.Kind((arrow.free.ForFreeApplicative, arrow.free.instances.freeapplicative.applicative.product.S)), arrow.free.instances.freeapplicative.applicative.product.B)))arrow.free.instances.freeapplicative.applicative/arrow.-kind/product.html
$dokka.location:arrow.free.instances.freeapplicative.eq$eq(arrow.free.FreeApplicative.Companion, arrow.typeclasses.Monad((arrow.free.instances.freeapplicative.eq.eq.G)), arrow.core.FunctionK((arrow.free.instances.freeapplicative.eq.eq.F, arrow.free.instances.freeapplicative.eq.eq.G)))arrow.free.instances.freeapplicative.eq/arrow.free.-free-applicative/eq.html
$dokka.location:arrow.free.instances.freeapplicative.eq$eqv(arrow.Kind((arrow.Kind((arrow.free.ForFreeApplicative, arrow.free.instances.freeapplicative.eq.eqv.F)), arrow.free.instances.freeapplicative.eq.eqv.A)), arrow.Kind((arrow.Kind((arrow.free.ForFreeApplicative, arrow.free.instances.freeapplicative.eq.eqv.F)), arrow.free.instances.freeapplicative.eq.eqv.A)), arrow.typeclasses.Monad((arrow.free.instances.freeapplicative.eq.eqv.G)), arrow.core.FunctionK((arrow.free.instances.freeapplicative.eq.eqv.F, arrow.free.instances.freeapplicative.eq.eqv.G)))arrow.free.instances.freeapplicative.eq/arrow.-kind/eqv.html
$dokka.location:arrow.free.instances.freeapplicative.eq$neqv(arrow.Kind((arrow.Kind((arrow.free.ForFreeApplicative, arrow.free.instances.freeapplicative.eq.neqv.F)), arrow.free.instances.freeapplicative.eq.neqv.A)), arrow.Kind((arrow.Kind((arrow.free.ForFreeApplicative, arrow.free.instances.freeapplicative.eq.neqv.F)), arrow.free.instances.freeapplicative.eq.neqv.A)), arrow.typeclasses.Monad((arrow.free.instances.freeapplicative.eq.neqv.G)), arrow.core.FunctionK((arrow.free.instances.freeapplicative.eq.neqv.F, arrow.free.instances.freeapplicative.eq.neqv.G)))arrow.free.instances.freeapplicative.eq/arrow.-kind/neqv.html
$dokka.location:arrow.free.instances.freeapplicative.functor$as(arrow.Kind((arrow.Kind((arrow.free.ForFreeApplicative, arrow.free.instances.freeapplicative.functor.as.S)), arrow.free.instances.freeapplicative.functor.as.A)), arrow.free.instances.freeapplicative.functor.as.B)arrow.free.instances.freeapplicative.functor/arrow.-kind/as.html
$dokka.location:arrow.free.instances.freeapplicative.functor$fproduct(arrow.Kind((arrow.Kind((arrow.free.ForFreeApplicative, arrow.free.instances.freeapplicative.functor.fproduct.S)), arrow.free.instances.freeapplicative.functor.fproduct.A)), kotlin.Function1((arrow.free.instances.freeapplicative.functor.fproduct.A, arrow.free.instances.freeapplicative.functor.fproduct.B)))arrow.free.instances.freeapplicative.functor/arrow.-kind/fproduct.html
$dokka.location:arrow.free.instances.freeapplicative.functor$functor(arrow.free.FreeApplicative.Companion)arrow.free.instances.freeapplicative.functor/arrow.free.-free-applicative/functor.html
$dokka.location:arrow.free.instances.freeapplicative.functor$imap(arrow.Kind((arrow.Kind((arrow.free.ForFreeApplicative, arrow.free.instances.freeapplicative.functor.imap.S)), arrow.free.instances.freeapplicative.functor.imap.A)), kotlin.Function1((arrow.free.instances.freeapplicative.functor.imap.A, arrow.free.instances.freeapplicative.functor.imap.B)), kotlin.Function1((arrow.free.instances.freeapplicative.functor.imap.B, arrow.free.instances.freeapplicative.functor.imap.A)))arrow.free.instances.freeapplicative.functor/arrow.-kind/imap.html
$dokka.location:arrow.free.instances.freeapplicative.functor$map(arrow.Kind((arrow.Kind((arrow.free.ForFreeApplicative, arrow.free.instances.freeapplicative.functor.map.S)), arrow.free.instances.freeapplicative.functor.map.A)), kotlin.Function1((arrow.free.instances.freeapplicative.functor.map.A, arrow.free.instances.freeapplicative.functor.map.B)))arrow.free.instances.freeapplicative.functor/arrow.-kind/map.html
$dokka.location:arrow.free.instances.freeapplicative.functor$tupleLeft(arrow.Kind((arrow.Kind((arrow.free.ForFreeApplicative, arrow.free.instances.freeapplicative.functor.tupleLeft.S)), arrow.free.instances.freeapplicative.functor.tupleLeft.A)), arrow.free.instances.freeapplicative.functor.tupleLeft.B)arrow.free.instances.freeapplicative.functor/arrow.-kind/tuple-left.html
$dokka.location:arrow.free.instances.freeapplicative.functor$tupleRight(arrow.Kind((arrow.Kind((arrow.free.ForFreeApplicative, arrow.free.instances.freeapplicative.functor.tupleRight.S)), arrow.free.instances.freeapplicative.functor.tupleRight.A)), arrow.free.instances.freeapplicative.functor.tupleRight.B)arrow.free.instances.freeapplicative.functor/arrow.-kind/tuple-right.html
$dokka.location:arrow.free.instances.freeapplicative.functor$void(arrow.Kind((arrow.Kind((arrow.free.ForFreeApplicative, arrow.free.instances.freeapplicative.functor.void.S)), arrow.free.instances.freeapplicative.functor.void.A)))arrow.free.instances.freeapplicative.functor/arrow.-kind/void.html
$dokka.location:arrow.free.instances.freeapplicative.functor$widen(arrow.Kind((arrow.Kind((arrow.free.ForFreeApplicative, arrow.free.instances.freeapplicative.functor.widen.S)), arrow.free.instances.freeapplicative.functor.widen.A)))arrow.free.instances.freeapplicative.functor/arrow.-kind/widen.html
$dokka.location:arrow.free.instances.yoneda.functor$as(arrow.Kind((arrow.Kind((arrow.free.ForYoneda, arrow.free.instances.yoneda.functor.as.U)), arrow.free.instances.yoneda.functor.as.A)), arrow.free.instances.yoneda.functor.as.B)arrow.free.instances.yoneda.functor/arrow.-kind/as.html
$dokka.location:arrow.free.instances.yoneda.functor$fproduct(arrow.Kind((arrow.Kind((arrow.free.ForYoneda, arrow.free.instances.yoneda.functor.fproduct.U)), arrow.free.instances.yoneda.functor.fproduct.A)), kotlin.Function1((arrow.free.instances.yoneda.functor.fproduct.A, arrow.free.instances.yoneda.functor.fproduct.B)))arrow.free.instances.yoneda.functor/arrow.-kind/fproduct.html
$dokka.location:arrow.free.instances.yoneda.functor$functor(arrow.free.Yoneda.Companion)arrow.free.instances.yoneda.functor/arrow.free.-yoneda/functor.html
$dokka.location:arrow.free.instances.yoneda.functor$imap(arrow.Kind((arrow.Kind((arrow.free.ForYoneda, arrow.free.instances.yoneda.functor.imap.U)), arrow.free.instances.yoneda.functor.imap.A)), kotlin.Function1((arrow.free.instances.yoneda.functor.imap.A, arrow.free.instances.yoneda.functor.imap.B)), kotlin.Function1((arrow.free.instances.yoneda.functor.imap.B, arrow.free.instances.yoneda.functor.imap.A)))arrow.free.instances.yoneda.functor/arrow.-kind/imap.html
$dokka.location:arrow.free.instances.yoneda.functor$map(arrow.Kind((arrow.Kind((arrow.free.ForYoneda, arrow.free.instances.yoneda.functor.map.U)), arrow.free.instances.yoneda.functor.map.A)), kotlin.Function1((arrow.free.instances.yoneda.functor.map.A, arrow.free.instances.yoneda.functor.map.B)))arrow.free.instances.yoneda.functor/arrow.-kind/map.html
$dokka.location:arrow.free.instances.yoneda.functor$tupleLeft(arrow.Kind((arrow.Kind((arrow.free.ForYoneda, arrow.free.instances.yoneda.functor.tupleLeft.U)), arrow.free.instances.yoneda.functor.tupleLeft.A)), arrow.free.instances.yoneda.functor.tupleLeft.B)arrow.free.instances.yoneda.functor/arrow.-kind/tuple-left.html
$dokka.location:arrow.free.instances.yoneda.functor$tupleRight(arrow.Kind((arrow.Kind((arrow.free.ForYoneda, arrow.free.instances.yoneda.functor.tupleRight.U)), arrow.free.instances.yoneda.functor.tupleRight.A)), arrow.free.instances.yoneda.functor.tupleRight.B)arrow.free.instances.yoneda.functor/arrow.-kind/tuple-right.html
$dokka.location:arrow.free.instances.yoneda.functor$void(arrow.Kind((arrow.Kind((arrow.free.ForYoneda, arrow.free.instances.yoneda.functor.void.U)), arrow.free.instances.yoneda.functor.void.A)))arrow.free.instances.yoneda.functor/arrow.-kind/void.html
$dokka.location:arrow.free.instances.yoneda.functor$widen(arrow.Kind((arrow.Kind((arrow.free.ForYoneda, arrow.free.instances.yoneda.functor.widen.U)), arrow.free.instances.yoneda.functor.widen.A)))arrow.free.instances.yoneda.functor/arrow.-kind/widen.html
arrow.free.instances
arrow.free.instances.cofree.comonad
arrow.free.instances.cofree.functor
arrow.free.instances.coyoneda.functor
arrow.free.instances.free.applicative
arrow.free.instances.free.eq
arrow.free.instances.free.functor
arrow.free.instances.free.monad
arrow.free.instances.freeapplicative.applicative
arrow.free.instances.freeapplicative.eq
arrow.free.instances.freeapplicative.functor
arrow.free.instances.yoneda.functor
